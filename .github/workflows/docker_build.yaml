name: "Docker Build"

on:
  workflow_call:
    inputs:
      go_version:
        description: "Version of go runtime to install"
        type: string
        default: '1.21.1'
      docker_file:
        required: false
        type: string
        default: Dockerfile
    secrets:
      gh_sudo_token:
        required: true

jobs:
  docker_build:
    runs-on: ubuntu-latest
    steps:
      - name: Git Fetch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check for go repo
        id: go_check
        run: |
          if [ -f "go.mod" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Git for Go
        run: git config --global url."https://git:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"
        env:
          GITHUB_TOKEN: ${{ secrets.gh_sudo_token }}
      - name: Install Go
        uses: actions/setup-go@v4
        if: steps.go_check.outputs.exists == 'true'
        with:
          go-version: ${{ inputs.go_version }}
      - name: Go Mod Vendor
        if: steps.go_check.outputs.exists == 'true'
        run: |
          go mod tidy
          go mod vendor
        env:
          GOPRIVATE: github.com/fpmi-hci-2023/*
      - name: Set up Docker Buildx
        if: steps.build_src.outputs.run_build == 'true'
        uses: docker/setup-buildx-action@v2
      - name: Docker Build
        if: steps.build_src.outputs.run_build == 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{ inputs.docker_file }}
          build-args: |
            GO_VERSION=${{ inputs.go_version }}
            GITHUB_TOKEN=${{ secrets.gh_sudo_token }}